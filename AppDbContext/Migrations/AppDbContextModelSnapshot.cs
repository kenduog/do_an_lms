// <auto-generated />
using System;
using AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppDbContext.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.AuthEntities.tbl_ContentType", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isRoot")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<Guid?>("parentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ContentType");
                });

            modelBuilder.Entity("Entities.AuthEntities.tbl_Group", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("userCanEdit")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_Group");
                });

            modelBuilder.Entity("Entities.AuthEntities.tbl_GroupPermission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("groupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("permissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_GroupPermission");
                });

            modelBuilder.Entity("Entities.AuthEntities.tbl_Permission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("contentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isParent")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Permission");
                });

            modelBuilder.Entity("Entities.AuthEntities.tbl_UserGroup", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("groupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_UserGroup");
                });

            modelBuilder.Entity("Entities.AuthEntities.tbl_UserPermission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("permissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_UserPermission");
                });

            modelBuilder.Entity("Entities.AuthEntities.tbl_Users", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<double?>("birthday")
                        .HasColumnType("float");

                    b.Property<string>("branchIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("cityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("createdDateKeyForgot")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("districtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("firstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("fullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("gender")
                        .HasColumnType("int");

                    b.Property<string>("genderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDev")
                        .HasColumnType("bit");

                    b.Property<bool?>("isSuperUser")
                        .HasColumnType("bit");

                    b.Property<string>("keyForgotPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("oneSignalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("refreshToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("refreshTokenExprires")
                        .HasColumnType("float");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumbnailResize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("wardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Users");
                });

            modelBuilder.Entity("Entities.ClassToPrepare", b =>
                {
                    b.Property<Guid?>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("session")
                        .HasColumnType("int");

                    b.Property<int?>("sessionType")
                        .HasColumnType("int");

                    b.ToTable("ClassToPrepare");
                });

            modelBuilder.Entity("Entities.SubjectPrepare", b =>
                {
                    b.Property<int?>("duration")
                        .HasColumnType("int");

                    b.Property<Guid?>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SubjectPrepare");
                });

            modelBuilder.Entity("Entities.TeacherBySubjectReponse", b =>
                {
                    b.Property<Guid?>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("teacherCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TeacherBySubjectReponse");
                });

            modelBuilder.Entity("Entities.TimeTableDetailResponse", b =>
                {
                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("className")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("day")
                        .HasColumnType("int");

                    b.Property<double>("eTime")
                        .HasColumnType("float");

                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("index")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("roomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("roomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("sTime")
                        .HasColumnType("float");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<Guid?>("subjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("subjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("subjectType")
                        .HasColumnType("int");

                    b.Property<Guid?>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("teacherName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TimeTableDetailResponse");
                });

            modelBuilder.Entity("Entities.sys_Log", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("fullMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ipAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("logLevel")
                        .HasColumnType("int");

                    b.Property<int>("logType")
                        .HasColumnType("int");

                    b.Property<string>("pageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("referrerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("sys_Log");
                });

            modelBuilder.Entity("Entities.sys_MultipleMessage", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("sys_MultipleMessage");
                });

            modelBuilder.Entity("Entities.tbl_Attendance", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Attendance");
                });

            modelBuilder.Entity("Entities.tbl_AutoGenCodeConfig", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<int?>("autoNumberLength")
                        .HasColumnType("int");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("currentCode")
                        .HasColumnType("int");

                    b.Property<int?>("currentNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDay")
                        .HasColumnType("bit");

                    b.Property<bool?>("isMonth")
                        .HasColumnType("bit");

                    b.Property<bool?>("isYear")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numberIsMissed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_AutoGenCodeConfig");
                });

            modelBuilder.Entity("Entities.tbl_Bill", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<double?>("debt")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("paid")
                        .HasColumnType("float");

                    b.Property<double?>("paymentDate")
                        .HasColumnType("float");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("totalFinalPrice")
                        .HasColumnType("float");

                    b.Property<double?>("totalPrice")
                        .HasColumnType("float");

                    b.Property<double?>("totalReduced")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Bill");
                });

            modelBuilder.Entity("Entities.tbl_BillDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("billId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("discountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("discountMaximumValue")
                        .HasColumnType("float");

                    b.Property<int?>("discountType")
                        .HasColumnType("int");

                    b.Property<double?>("discountValue")
                        .HasColumnType("float");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<double?>("quantity")
                        .HasColumnType("float");

                    b.Property<double?>("reduced")
                        .HasColumnType("float");

                    b.Property<double?>("totalFinalPrice")
                        .HasColumnType("float");

                    b.Property<double?>("totalPrice")
                        .HasColumnType("float");

                    b.Property<double?>("totalReduced")
                        .HasColumnType("float");

                    b.Property<Guid?>("tuitionConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_BillDetail");
                });

            modelBuilder.Entity("Entities.tbl_Branch", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("cityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("districtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logoInBill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("wardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Branch");
                });

            modelBuilder.Entity("Entities.tbl_ChildAssessmentDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("childAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ChildAssessmentDetails");
                });

            modelBuilder.Entity("Entities.tbl_ChildAssessmentTopic", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ChildAssessmentTopics");
                });

            modelBuilder.Entity("Entities.tbl_Cities", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Cities");
                });

            modelBuilder.Entity("Entities.tbl_Class", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("session")
                        .HasColumnType("int");

                    b.Property<int?>("sessionType")
                        .HasColumnType("int");

                    b.Property<int?>("size")
                        .HasColumnType("int");

                    b.Property<Guid?>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Class");
                });

            modelBuilder.Entity("Entities.tbl_ClassInTimeTable", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("timeTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ClassInTimeTable");
                });

            modelBuilder.Entity("Entities.tbl_ClassLevel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ClassLevel");
                });

            modelBuilder.Entity("Entities.tbl_ClassShift", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("day")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<int?>("period")
                        .HasColumnType("int");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ClassShift");
                });

            modelBuilder.Entity("Entities.tbl_CollectionPlan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<bool?>("allowFeeReduction")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("collectionType")
                        .HasColumnType("int");

                    b.Property<int?>("condition")
                        .HasColumnType("int");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("endDay")
                        .HasColumnType("int");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("scope")
                        .HasColumnType("int");

                    b.Property<Guid?>("semesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("startDay")
                        .HasColumnType("int");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_CollectionPlan");
                });

            modelBuilder.Entity("Entities.tbl_CollectionPlanDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("collectionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("collectionType")
                        .HasColumnType("int");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("feeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_CollectionPlanDetail");
                });

            modelBuilder.Entity("Entities.tbl_CollectionSession", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<Guid?>("collectionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("month")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notificationContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentStruct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_CollectionSession");
                });

            modelBuilder.Entity("Entities.tbl_CollectionSessionFee", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("collectionSessionHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("collectionSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("feeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("tbl_CollectionSessionFee");
                });

            modelBuilder.Entity("Entities.tbl_CollectionSessionHeader", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<bool?>("allowFeeReduction")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("collectionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("collectionSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("collectionType")
                        .HasColumnType("int");

                    b.Property<int?>("condition")
                        .HasColumnType("int");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("daysOfAbsent")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("endDay")
                        .HasColumnType("int");

                    b.Property<Guid?>("feeReductionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isPaid")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("notificationSent")
                        .HasColumnType("int");

                    b.Property<double?>("otherFee")
                        .HasColumnType("float");

                    b.Property<double?>("paid")
                        .HasColumnType("float");

                    b.Property<double?>("paymentDate")
                        .HasColumnType("float");

                    b.Property<int?>("paymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("reasonForOtherFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("refund")
                        .HasColumnType("float");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("scope")
                        .HasColumnType("int");

                    b.Property<int?>("startDay")
                        .HasColumnType("int");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_CollectionSessionHeader");
                });

            modelBuilder.Entity("Entities.tbl_CollectionSessionLine", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("collectionPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("collectionSessionHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("collectionSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("collectionType")
                        .HasColumnType("int");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("feeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_CollectionSessionLine");
                });

            modelBuilder.Entity("Entities.tbl_Comment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("afternoonSnack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<string>("dayComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("hygiene")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lunch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sleep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Comments");
                });

            modelBuilder.Entity("Entities.tbl_CommentDefault", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("afternoonSnack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("hygiene")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lunch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sleep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_CommentDefaults");
                });

            modelBuilder.Entity("Entities.tbl_CommentInNews", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("newsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("replyCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_CommentInNews");
                });

            modelBuilder.Entity("Entities.tbl_Criteria", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Criteria");
                });

            modelBuilder.Entity("Entities.tbl_CriteriaDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("criteriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_CriteriaDetail");
                });

            modelBuilder.Entity("Entities.tbl_DayOfWeek", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("key")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tbl_DayOfWeek");
                });

            modelBuilder.Entity("Entities.tbl_DeliveryOrderHeader", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<Guid?>("approvedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("approvedDate")
                        .HasColumnType("float");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isApproved")
                        .HasColumnType("bit");

                    b.Property<string>("statusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("totalProduct")
                        .HasColumnType("float");

                    b.Property<string>("typeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_DeliveryOrderHeader");
                });

            modelBuilder.Entity("Entities.tbl_DeliveryOrderLine", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<double?>("convertQty")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("deliveryOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("itemSkuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("qty")
                        .HasColumnType("float");

                    b.Property<Guid?>("unitOfMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("unitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("unitPriceInventory")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("deliveryOrderId");

                    b.ToTable("tbl_DeliveryOrderLine");
                });

            modelBuilder.Entity("Entities.tbl_Departments", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Departments");
                });

            modelBuilder.Entity("Entities.tbl_Discount", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("maximumValue")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tuitionConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("tbl_Discount");
                });

            modelBuilder.Entity("Entities.tbl_Districts", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("cityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Districts");
                });

            modelBuilder.Entity("Entities.tbl_DocumentNews", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("commentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("newsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("typeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_DocumentNews");
                });

            modelBuilder.Entity("Entities.tbl_ExemptionOrReduction", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("tbl_ExemptionOrReduction");
                });

            modelBuilder.Entity("Entities.tbl_Fee", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("collectionType")
                        .HasColumnType("int");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Fee");
                });

            modelBuilder.Entity("Entities.tbl_FeeInGrade", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("feeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_FeeInGrade");
                });

            modelBuilder.Entity("Entities.tbl_FeeReduction", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_FeeReduction");
                });

            modelBuilder.Entity("Entities.tbl_FeeReductionConfig", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("feeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("feeReductionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("tbl_FeeReductionConfig");
                });

            modelBuilder.Entity("Entities.tbl_Feedback", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("feedbackGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("incognito")
                        .HasColumnType("bit");

                    b.Property<int?>("numberOfStars")
                        .HasColumnType("int");

                    b.Property<bool?>("priority")
                        .HasColumnType("bit");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Feedback");
                });

            modelBuilder.Entity("Entities.tbl_FeedbackGroup", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_vi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_FeedbackGroup");
                });

            modelBuilder.Entity("Entities.tbl_FeedbackPermission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("groupIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("roleIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_FeedbackPermission");
                });

            modelBuilder.Entity("Entities.tbl_FeedbackReply", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("feedbackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_FeedbackReply");
                });

            modelBuilder.Entity("Entities.tbl_Food", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("itemCount")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Food");
                });

            modelBuilder.Entity("Entities.tbl_FoodItem", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("actualQty")
                        .HasColumnType("float");

                    b.Property<double?>("calo")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("essenceRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("foodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("gluxit")
                        .HasColumnType("float");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("lipit")
                        .HasColumnType("float");

                    b.Property<double?>("protein")
                        .HasColumnType("float");

                    b.Property<double?>("qty")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_FoodItem");
                });

            modelBuilder.Entity("Entities.tbl_GoodBehaviorCertificate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("status")
                        .HasColumnType("bit");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("weekId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_GoodBehaviorCertificates");
                });

            modelBuilder.Entity("Entities.tbl_Grade", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("acronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("studentYearOld")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Grade");
                });

            modelBuilder.Entity("Entities.tbl_GroupNews", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_GroupNews");
                });

            modelBuilder.Entity("Entities.tbl_HighestLevelOfEducation", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_HighestLevelOfEducation");
                });

            modelBuilder.Entity("Entities.tbl_Holiday", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Holiday");
                });

            modelBuilder.Entity("Entities.tbl_Item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("calo")
                        .HasColumnType("float");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("essenceRate")
                        .HasColumnType("float");

                    b.Property<double?>("gluxit")
                        .HasColumnType("float");

                    b.Property<Guid?>("itemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("lipit")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("protein")
                        .HasColumnType("float");

                    b.Property<Guid?>("unitOfMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("unitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("weightPerUnit")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("tbl_Item");
                });

            modelBuilder.Entity("Entities.tbl_ItemGroup", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ItemGroup");
                });

            modelBuilder.Entity("Entities.tbl_ItemInventory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("qty")
                        .HasColumnType("float");

                    b.Property<double?>("unitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ItemInventory");
                });

            modelBuilder.Entity("Entities.tbl_ItemOfSKU", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("convertQty")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isMain")
                        .HasColumnType("bit");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("limitInventory")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("unitOfMearsureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("unitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ItemOfSKU");
                });

            modelBuilder.Entity("Entities.tbl_LikeInNews", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("commentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isLike")
                        .HasColumnType("bit");

                    b.Property<Guid>("newsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_LikeInNews");
                });

            modelBuilder.Entity("Entities.tbl_Lookup", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("lookupTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("code");

                    b.ToTable("tbl_Lookup");
                });

            modelBuilder.Entity("Entities.tbl_LookupType", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("code");

                    b.ToTable("tbl_LookupType");
                });

            modelBuilder.Entity("Entities.tbl_Menu", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("calo")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("gluxit")
                        .HasColumnType("float");

                    b.Property<double?>("gluxitPercent")
                        .HasColumnType("float");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("lipit")
                        .HasColumnType("float");

                    b.Property<double?>("lipitPercent")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("nutritionGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("protein")
                        .HasColumnType("float");

                    b.Property<double?>("proteinPercent")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Menu");
                });

            modelBuilder.Entity("Entities.tbl_MenuFood", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("foodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("menuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_MenuFood");
                });

            modelBuilder.Entity("Entities.tbl_MenuItem", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("menuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<double?>("qty")
                        .HasColumnType("float");

                    b.Property<Guid?>("unitOfMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_MenuItem");
                });

            modelBuilder.Entity("Entities.tbl_MenuWeek", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("day")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("menuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("weekId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_MenuWeek");
                });

            modelBuilder.Entity("Entities.tbl_Necessary", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Necessary");
                });

            modelBuilder.Entity("Entities.tbl_News", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("branchIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("pinned")
                        .HasColumnType("bit");

                    b.Property<int?>("pinnedPosition")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_News");
                });

            modelBuilder.Entity("Entities.tbl_Notification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("deepLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSeen")
                        .HasColumnType("bit");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("param")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Notification");
                });

            modelBuilder.Entity("Entities.tbl_NotificationConfig", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("deepLinkForAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deepLinkForParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deepLinkForTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("emailTemplateFileAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailTemplateFileParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailTemplateFileTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSendEmailAll")
                        .HasColumnType("bit");

                    b.Property<bool>("isSendEmailParent")
                        .HasColumnType("bit");

                    b.Property<bool>("isSendEmailTeacher")
                        .HasColumnType("bit");

                    b.Property<bool>("isSendNotiAll")
                        .HasColumnType("bit");

                    b.Property<bool>("isSendNotiParent")
                        .HasColumnType("bit");

                    b.Property<bool>("isSendNotiTeacher")
                        .HasColumnType("bit");

                    b.Property<string>("linkForAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkForParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkForTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notiContentForAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notiContentForParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notiContentForTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notiTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("param")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("screen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_NotificationConfigs");
                });

            modelBuilder.Entity("Entities.tbl_NutritionGroup", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("fCalo")
                        .HasColumnType("float");

                    b.Property<double?>("fGluxit")
                        .HasColumnType("float");

                    b.Property<double?>("fLipit")
                        .HasColumnType("float");

                    b.Property<double?>("fProtein")
                        .HasColumnType("float");

                    b.Property<string>("gradeIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("tCalo")
                        .HasColumnType("float");

                    b.Property<double?>("tGluxit")
                        .HasColumnType("float");

                    b.Property<double?>("tLipit")
                        .HasColumnType("float");

                    b.Property<double?>("tProtein")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_NutritionGroup");
                });

            modelBuilder.Entity("Entities.tbl_Parent", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Parent");
                });

            modelBuilder.Entity("Entities.tbl_PaymentBank", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_PaymentBank");
                });

            modelBuilder.Entity("Entities.tbl_PaymentMethod", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("accountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("paymentBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_PaymentMethod");
                });

            modelBuilder.Entity("Entities.tbl_PaymentSession", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("billId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("paymentDate")
                        .HasColumnType("float");

                    b.Property<Guid?>("paymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("printContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("tbl_PaymentSession");
                });

            modelBuilder.Entity("Entities.tbl_Position", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Position");
                });

            modelBuilder.Entity("Entities.tbl_Profile", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("option")
                        .HasColumnType("bit");

                    b.Property<Guid?>("profileTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Profile");
                });

            modelBuilder.Entity("Entities.tbl_ProfileTemplate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("index")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ProfileTemplate");
                });

            modelBuilder.Entity("Entities.tbl_PurchaseOrderHeader", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<Guid?>("approvedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("approvedDate")
                        .HasColumnType("float");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isApproved")
                        .HasColumnType("bit");

                    b.Property<string>("statusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("totalProduct")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_PurchaseOrderHeader");
                });

            modelBuilder.Entity("Entities.tbl_PurchaseOrderLine", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<double?>("convertQty")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("purchaseOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("qty")
                        .HasColumnType("float");

                    b.Property<Guid?>("unitOfMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("unitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("unitPriceInventory")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("purchaseOrderId");

                    b.ToTable("tbl_PurchaseOrderLine");
                });

            modelBuilder.Entity("Entities.tbl_ReceiveOrderHeader", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<Guid?>("approvedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("approvedDate")
                        .HasColumnType("float");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isApproved")
                        .HasColumnType("bit");

                    b.Property<string>("statusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("totalProduct")
                        .HasColumnType("float");

                    b.Property<string>("typeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("vendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ReceiveOrderHeader");
                });

            modelBuilder.Entity("Entities.tbl_ReceiveOrderLine", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("amt")
                        .HasColumnType("float");

                    b.Property<double?>("convertQty")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("itemSkuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("qty")
                        .HasColumnType("float");

                    b.Property<Guid?>("receiveOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("unitOfMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("unitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("unitPriceInventory")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("receiveOrderId");

                    b.ToTable("tbl_ReceiveOrderLine");
                });

            modelBuilder.Entity("Entities.tbl_ReportTemplate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tokens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ReportTemplate");
                });

            modelBuilder.Entity("Entities.tbl_Role", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Role");
                });

            modelBuilder.Entity("Entities.tbl_Room", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Room");
                });

            modelBuilder.Entity("Entities.tbl_ScaleMeasure", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("classIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("gradeIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ScaleMeasure");
                });

            modelBuilder.Entity("Entities.tbl_ScaleMeasureDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("bmi")
                        .HasColumnType("float");

                    b.Property<string>("bmiResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("evaluation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("height")
                        .HasColumnType("float");

                    b.Property<int?>("monthOfAge")
                        .HasColumnType("int");

                    b.Property<Guid?>("scaleMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("studentBirthDay")
                        .HasColumnType("float");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("weight")
                        .HasColumnType("float");

                    b.Property<double?>("weightMustHave")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("tbl_ScaleMeasureDetail");
                });

            modelBuilder.Entity("Entities.tbl_Schedule", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<Guid?>("subjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("timeTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("weekId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Schedule");
                });

            modelBuilder.Entity("Entities.tbl_SchoolYear", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("principalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_SchoolYear");
                });

            modelBuilder.Entity("Entities.tbl_Semester", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("semester")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("weeks")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_Semester");
                });

            modelBuilder.Entity("Entities.tbl_Staff", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("bankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("certificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("departmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("graduateSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("graduateTime")
                        .HasColumnType("float");

                    b.Property<Guid?>("highestLevelOfEducationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("joined")
                        .HasColumnType("float");

                    b.Property<string>("major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("otherCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teachingExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Staff");
                });

            modelBuilder.Entity("Entities.tbl_Student", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("birthday")
                        .HasColumnType("float");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("enrollmentDate")
                        .HasColumnType("float");

                    b.Property<string>("ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("fatherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("gender")
                        .HasColumnType("int");

                    b.Property<string>("genderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("guardianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("hometown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("method")
                        .HasColumnType("int");

                    b.Property<Guid?>("motherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("startLearningDate")
                        .HasColumnType("float");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Student");
                });

            modelBuilder.Entity("Entities.tbl_StudentInAssessment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("assessmentDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("assessmentTopicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("semesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("status")
                        .HasColumnType("bit");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_StudentInAssessments");
                });

            modelBuilder.Entity("Entities.tbl_StudentInClass", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_StudentInClass");
                });

            modelBuilder.Entity("Entities.tbl_StudentLeaveRequest", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("fromDate")
                        .HasColumnType("float");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("toDate")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_StudentLeaveRequest");
                });

            modelBuilder.Entity("Entities.tbl_StudySession", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<int?>("index")
                        .HasColumnType("int");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_StudySession");
                });

            modelBuilder.Entity("Entities.tbl_StudyShift", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("dayInWeek")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("position")
                        .HasColumnType("int");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_StudyShift");
                });

            modelBuilder.Entity("Entities.tbl_Subject", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("acronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("remarkType")
                        .HasColumnType("int");

                    b.Property<Guid?>("subjectGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("totalSemester1")
                        .HasColumnType("int");

                    b.Property<int?>("totalSemester2")
                        .HasColumnType("int");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Subject");
                });

            modelBuilder.Entity("Entities.tbl_SubjectGroup", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_SubjectGroup");
                });

            modelBuilder.Entity("Entities.tbl_SubjectInGrade", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("duration")
                        .HasColumnType("int");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("lessonInSemester1")
                        .HasColumnType("int");

                    b.Property<int?>("lessonInSemester2")
                        .HasColumnType("int");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("subjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_SubjectInGrade");
                });

            modelBuilder.Entity("Entities.tbl_TeachingAssignment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("subjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_TeachingAssignment");
                });

            modelBuilder.Entity("Entities.tbl_TeachingFrame", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<int?>("cps")
                        .HasColumnType("int");

                    b.Property<int?>("cpw")
                        .HasColumnType("int");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("subjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_TeachingFrame");
                });

            modelBuilder.Entity("Entities.tbl_Template", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Template");
                });

            modelBuilder.Entity("Entities.tbl_TimeTable", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("gradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("semesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("startDay")
                        .HasColumnType("float");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_TimeTable");
                });

            modelBuilder.Entity("Entities.tbl_TimeTableDetail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("day")
                        .HasColumnType("int");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double>("eTime")
                        .HasColumnType("float");

                    b.Property<int?>("index")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("roomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("sTime")
                        .HasColumnType("float");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<Guid?>("subjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("teacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("timeTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_TimeTableDetail");
                });

            modelBuilder.Entity("Entities.tbl_Transcript", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("classId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("score")
                        .HasColumnType("int");

                    b.Property<Guid?>("semesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("studentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("subjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Transcript");
                });

            modelBuilder.Entity("Entities.tbl_TuitionConfig", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tuitionConfigCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_TuitionConfig");
                });

            modelBuilder.Entity("Entities.tbl_TuitionConfigCategory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_TuitionConfigCategory");
                });

            modelBuilder.Entity("Entities.tbl_TypeDocumentNews", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("typeCode")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_TypeDocumentNews");
                });

            modelBuilder.Entity("Entities.tbl_UnitOfMeasure", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_UnitOfMeasure");
                });

            modelBuilder.Entity("Entities.tbl_UserJoinGroupNews", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("groupNewsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isHide")
                        .HasColumnType("bit");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("userType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_UserJoinGroupNews");
                });

            modelBuilder.Entity("Entities.tbl_ValueEntry", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("billId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("branchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("convertQty")
                        .HasColumnType("float");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("date")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("itemSkuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<double?>("qty")
                        .HasColumnType("float");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("vendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_ValueEntry");
                });

            modelBuilder.Entity("Entities.tbl_Vendor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Vendor");
                });

            modelBuilder.Entity("Entities.tbl_Wards", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("districtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Wards");
                });

            modelBuilder.Entity("Entities.tbl_Week", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("eTime")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("sTime")
                        .HasColumnType("float");

                    b.Property<Guid?>("schoolYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("semesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("weekNumber")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_Weeks");
                });

            modelBuilder.Entity("Entities.tbl_DeliveryOrderLine", b =>
                {
                    b.HasOne("Entities.tbl_DeliveryOrderHeader", "deliveryOrderHeader")
                        .WithMany("details")
                        .HasForeignKey("deliveryOrderId");

                    b.Navigation("deliveryOrderHeader");
                });

            modelBuilder.Entity("Entities.tbl_PurchaseOrderLine", b =>
                {
                    b.HasOne("Entities.tbl_PurchaseOrderHeader", "purchaseOrderHeader")
                        .WithMany("details")
                        .HasForeignKey("purchaseOrderId");

                    b.Navigation("purchaseOrderHeader");
                });

            modelBuilder.Entity("Entities.tbl_ReceiveOrderLine", b =>
                {
                    b.HasOne("Entities.tbl_ReceiveOrderHeader", "receiveOrderHeader")
                        .WithMany("details")
                        .HasForeignKey("receiveOrderId");

                    b.Navigation("receiveOrderHeader");
                });

            modelBuilder.Entity("Entities.tbl_DeliveryOrderHeader", b =>
                {
                    b.Navigation("details");
                });

            modelBuilder.Entity("Entities.tbl_PurchaseOrderHeader", b =>
                {
                    b.Navigation("details");
                });

            modelBuilder.Entity("Entities.tbl_ReceiveOrderHeader", b =>
                {
                    b.Navigation("details");
                });
#pragma warning restore 612, 618
        }
    }
}
